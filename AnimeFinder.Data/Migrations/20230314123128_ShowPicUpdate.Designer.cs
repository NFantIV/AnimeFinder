// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeFinder.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230314123128_ShowPicUpdate")]
    partial class ShowPicUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CharacterImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainRival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShowId")
                        .HasColumnType("int");

                    b.Property<string>("StrongestAttack")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterImageURL = "https://dragonball.guru/wp-content/uploads/2021/01/goku-dragon-ball-guru.jpg",
                            MainRival = "Vegeta",
                            Name = "Goku",
                            ShowId = 1,
                            StrongestAttack = "Kamehameha"
                        },
                        new
                        {
                            Id = 2,
                            CharacterImageURL = "https://static.wikia.nocookie.net/naruto/images/d/d6/Naruto_Part_I.png/revision/latest/scale-to-width-down/1200?cb=20210223094656",
                            MainRival = "Sasuke",
                            Name = "Naruto",
                            ShowId = 2,
                            StrongestAttack = "Rasengan"
                        },
                        new
                        {
                            Id = 3,
                            CharacterImageURL = "https://static.wikia.nocookie.net/p__/images/b/be/Yona.jpg/revision/latest?cb=20210602102733&path-prefix=protagonist",
                            MainRival = "Zoey",
                            Name = "Yona",
                            ShowId = 3,
                            StrongestAttack = "Archery"
                        });
                });

            modelBuilder.Entity("Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EpisodeCount")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeasons")
                        .HasColumnType("int");

                    b.Property<int>("ShowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EpisodeCount = 276,
                            NumberOfSeasons = 9,
                            ShowId = 1
                        },
                        new
                        {
                            Id = 2,
                            EpisodeCount = 726,
                            NumberOfSeasons = 26,
                            ShowId = 2
                        },
                        new
                        {
                            Id = 3,
                            EpisodeCount = 24,
                            NumberOfSeasons = 1,
                            ShowId = 3
                        });
                });

            modelBuilder.Entity("Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = 0,
                            Name = "DragonBall Z"
                        },
                        new
                        {
                            Id = 2,
                            Genre = 0,
                            Name = "Naruto"
                        },
                        new
                        {
                            Id = 3,
                            Genre = 1,
                            Name = "Yona of The Dawn"
                        });
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.HasOne("Show", "Show")
                        .WithMany("Characters")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Season", b =>
                {
                    b.HasOne("Show", "Show")
                        .WithMany("Seasons")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Show", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
